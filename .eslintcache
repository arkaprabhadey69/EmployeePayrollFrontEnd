[{"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\index.js":"1","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\App.js":"2","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\reportWebVitals.js":"3","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\Form.js":"4","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\HeaderComponent.js":"5","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\FooterComponent.jsx":"6","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\service\\EmployeeService.js":"7","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\GetEmployee.js":"8"},{"size":547,"mtime":1608089089155,"results":"9","hashOfConfig":"10"},{"size":670,"mtime":1608092827305,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3762,"mtime":1608090090632,"results":"13","hashOfConfig":"10"},{"size":481,"mtime":1608090923362,"results":"14","hashOfConfig":"10"},{"size":423,"mtime":1608090846654,"results":"15","hashOfConfig":"10"},{"size":399,"mtime":1608093278483,"results":"16","hashOfConfig":"10"},{"size":1954,"mtime":1608094392042,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fzrxy6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\index.js",[],["37","38"],"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\App.js",["39"],"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\reportWebVitals.js",[],"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\Form.js",["40"],"import React, { Component } from 'react'\r\nimport Axios from \"axios\";\r\nimport EmployeeService from '../service/EmployeeService';\r\n\r\nexport class Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:'',\r\n             imgPath:'',\r\n             gender:'',\r\n             salary:'',\r\n             startDate:'',\r\n             dept:'',\r\n             notes:''\r\n\r\n        }\r\n    }\r\n    handleNameChange = event =>{\r\n        this.setState({\r\n                name: event.target.value\r\n            })\r\n    }\r\n    handleImgPathChange = event =>{\r\n        this.setState({\r\n            imgPath : event.target.value\r\n            })\r\n    }\r\n    handleGenderChange = event =>{\r\n        this.setState({\r\n            gender : event.target.value\r\n            })\r\n    }\r\n    handleSalaryChange = event =>{\r\n        this.setState({\r\n            salary : event.target.value\r\n            })\r\n    }\r\n    handlesStartDateChange = event =>{\r\n        this.setState({\r\n            startDate : event.target.value\r\n            })\r\n    }\r\n    handleDeptChange = event =>{\r\n        this.setState({\r\n            dept : event.target.value\r\n            })\r\n    }\r\n    handleNotesChange = event =>{\r\n        this.setState({\r\n            notes : event.target.value\r\n            })\r\n    }\r\n    handleSubmit=(event) =>{\r\n        // Axios.post('http://localhost:8080/emp/v1/insert', this.state)\r\n        EmployeeService.addEmployee(this.state)\r\n        .then(res=>{\r\n            console.log(res);\r\n            alert(res.data.message);\r\n        })\r\n        .catch(err=> {\r\n            console.log(err);\r\n        })\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td><input type='text' value={this.state.name} onChange={this.handleNameChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Image</td>\r\n                            <td> <input type='text' value={this.state.imgPath} onChange={this.handleImgPathChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender</td>\r\n                            <td> <input type='text' value={this.state.gender} onChange={this.handleGenderChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Salary</td>\r\n                            <td> <input type='text' value={this.state.salary} onChange={this.handleSalaryChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>StartDate</td>\r\n                            <td> <input type='date' value={this.state.startDate} onChange={this.handlesStartDateChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Department</td>\r\n                            <td> <input type='text' value={this.state.dept} onChange={this.handleDeptChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Notes</td>\r\n                            <td> <input type='text' value={this.state.notes} onChange={this.handleNotesChange}/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td><button type='submit'>Add Employee</button></td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n\r\n","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\HeaderComponent.js",["41"],"import React, { Component } from 'react'\r\n\r\nexport class HeaderComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n            <div>\r\n              <a className=\"navbar-brand\">Employee Payroll App</a>\r\n            </div>\r\n          </nav>  \r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\FooterComponent.jsx",[],"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\service\\EmployeeService.js",[],"C:\\Users\\deyar\\Documents\\React\\employeepayroll\\src\\component\\GetEmployee.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":10,"column":15,"nodeType":"53","endLine":10,"endColumn":43},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]